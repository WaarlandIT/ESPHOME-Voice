esphome:
  name: "voice-assistant"
  friendly_name: voice-assistant
  on_boot:
     - priority: -100
       then:
         - wait_until: api.connected
         - delay: 1s
         - if:
             condition:
               switch.is_on: use_wake_word
             then:
               - voice_assistant.start_continuous:
esp32:
  board: esp32-c3-devkitm-1
  framework:
    type: arduino

logger:

api:
  encryption:
    key: !secret api-key

ota:
 - platform: esphome

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

mqtt:
  broker: !secret mqtt_server
  username: !secret mqtt_user
  password: !secret mqtt_password

i2s_audio:
  - id: i2s
    i2s_lrclk_pin: GPIO6  #WS 
    i2s_bclk_pin: GPIO7 #SCK

microphone:
  - platform: i2s_audio
    id: va_mic
    adc_type: external
    i2s_din_pin: GPIO4 #SD
    channel: left
    i2s_audio_id: i2s

output:
  - platform: gpio
    pin: 
      number: GPIO9
      allow_other_uses: true
    id: set_low_speaker
  - platform: gpio
    id: onboard_led
    pin: 
      number: 8  
      inverted: true

speaker:
    platform: i2s_audio
    id: va_speaker
    i2s_audio_id: i2s
    dac_type: external
    i2s_dout_pin:
      number: GPIO9 
      allow_other_uses: true    
    channel: mono
    bits_per_sample: 32bit
    sample_rate: 16000

voice_assistant:
  microphone: va_mic
  use_wake_word: false
  noise_suppression_level: 2
  auto_gain: 31dBFS
  volume_multiplier: 2.0
  speaker: va_speaker
  id: assist
  on_wake_word_detected:
    - light.turn_on: led
  on_listening:
    - light.turn_off: led
  on_stt_vad_start:
    - light.turn_on: led
  on_stt_vad_end:
    - light.turn_off: led
  on_tts_start:
    - light.turn_on: led
  on_tts_end:
    - light.turn_off: led
  on_end:
    - delay: 100ms
    - wait_until:
        not:
          speaker.is_playing:
  on_error:
    - light.turn_on: led
    - delay: 1s
  on_client_connected:
    - if:
        condition:
          switch.is_on: use_wake_word
        then:
          - voice_assistant.start_continuous:
  on_client_disconnected:
    - if:
        condition:
          switch.is_on: use_wake_word
        then:
          - voice_assistant.stop:
          - light.turn_off: led

switch:
  - platform: template
    name: Use wake word
    id: use_wake_word
    optimistic: true
    restore_mode: RESTORE_DEFAULT_ON
    entity_category: config
    on_turn_on:
      - lambda: id(assist).set_use_wake_word(true);
      - if:
          condition:
            not:
              - voice_assistant.is_running
          then:
            - voice_assistant.start_continuous
    on_turn_off:
      - voice_assistant.stop
      - lambda: id(assist).set_use_wake_word(false);
  - platform: template
    name: Use Listen Light
    id: use_listen_light
    optimistic: true
    restore_mode: RESTORE_DEFAULT_ON
    entity_category: config

light:
  - platform: binary
    name: "Onboard Light"
    output: onboard_led
    id: led



